<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java网络基础</title>
      <link href="/2019/01/12/Java%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/01/12/Java%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="IP地址与端口概念"><a href="#IP地址与端口概念" class="headerlink" title="IP地址与端口概念"></a>IP地址与端口概念</h1><h2 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h2><p>在网络中每台计算机都必须有一个IP地址<br>32位，4个字节，常用点分十进制的格式表示，例如：192.168.1.100<br><strong>127.0.0.1</strong> 是固定ip地址，代表当前计算机，相当于面向对象里的 “this”</p><h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><p>两台计算机进行连接，总有一台服务器，一台客户端。<br>服务器和客户端之间的通信通过端口进行。</p><h2 id="本机IP地址"><a href="#本机IP地址" class="headerlink" title="本机IP地址"></a>本机IP地址</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSocket</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> UnknownHostException </span>&#123;</span><br><span class="line">        InetAddress host = InetAddress.getLocalHost();</span><br><span class="line">        String ip =host.getHostAddress();</span><br><span class="line">        System.out.println(<span class="string">"本机ip地址："</span> + ip);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ping命令"><a href="#ping命令" class="headerlink" title="ping命令"></a>ping命令</h2><p>使用ping判断一个地址是否能够到达<br>ping不是java的api，是windows中的一个小工具，用于判断一个地址的响应时间</p><h3 id="使用java-执行ping命令"><a href="#使用java-执行ping命令" class="headerlink" title="使用java 执行ping命令"></a>使用java 执行ping命令</h3><p>借助 Runtime.getRuntime().exec() 可以运行一个windows的exe程序<br><strong>windows的默认内码是GBK的,需要转换编码格式</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ipAddress</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Process p = Runtime.getRuntime().exec(<span class="string">"ping "</span> + <span class="string">"192.168.2.106"</span>);</span><br><span class="line">        BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(p.getInputStream(),<span class="string">"GBK"</span>));</span><br><span class="line">        String line = <span class="keyword">null</span>;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">while</span> ((line = br.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (line.length() != <span class="number">0</span>)</span><br><span class="line">                sb.append(line + <span class="string">"\r\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"本次指令返回的消息是："</span>);</span><br><span class="line">        System.out.println(sb.toString());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h2 id="获取当前网段可用IP地址"><a href="#获取当前网段可用IP地址" class="headerlink" title="获取当前网段可用IP地址"></a>获取当前网段可用IP地址</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selectIp</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> b=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">99</span>; i &lt;<span class="number">110</span> ; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">"正在ping 192.168.5."</span>+i+<span class="string">"  ip地址"</span>);</span><br><span class="line">            Process p = Runtime.getRuntime().exec(<span class="string">"ping "</span> + <span class="string">"192.168.5."</span>+i+<span class="string">""</span>);</span><br><span class="line">            BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(p.getInputStream(),<span class="string">"GBK"</span>));</span><br><span class="line">            String line = <span class="keyword">null</span>;</span><br><span class="line">            StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="keyword">while</span> ((line = br.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (line.length() != <span class="number">0</span>)&#123;</span><br><span class="line">                    sb.append(line + <span class="string">"\r\n"</span>);</span><br><span class="line">                    System.out.println(sb.toString());</span><br><span class="line">                    <span class="keyword">if</span> (line.contains(<span class="string">"丢失 = 0"</span>))&#123;</span><br><span class="line">                        b++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"可用ip"</span>+b+<span class="string">"个"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="Socket"><a href="#Socket" class="headerlink" title="Socket"></a>Socket</h1><p>使用 Socket(套接字)进行不同的程序之间的通信</p><h2 id="建立连接"><a href="#建立连接" class="headerlink" title="建立连接"></a>建立连接</h2><ol><li>服务端开启8888端口，并监听着，时刻等待着客户端的连接请求 </li><li>客户端知道服务端的ip地址和监听端口号，发出请求到服务端<br>客户端的端口地址是系统分配的，通常都会大于1024<br>一旦建立了连接，服务端会得到一个新的Socket对象，该对象负责与客户端进行通信。</li></ol><p><strong>Server</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span>  </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//服务端打开端口8888</span></span><br><span class="line">            ServerSocket ss = <span class="keyword">new</span> ServerSocket(<span class="number">8888</span>);</span><br><span class="line">               </span><br><span class="line">            <span class="comment">//在8888端口上监听，看是否有连接请求过来</span></span><br><span class="line">            System.out.println(<span class="string">"监听在端口号:8888"</span>);</span><br><span class="line">            Socket s =  ss.accept();</span><br><span class="line">               </span><br><span class="line">            System.out.println(<span class="string">"有连接过来"</span> + s);</span><br><span class="line">             </span><br><span class="line">            s.close();</span><br><span class="line">            ss.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">           </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p><strong>Client</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span>  </span>&#123;</span><br><span class="line">           </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//连接到本机的8888端口</span></span><br><span class="line">            Socket s = <span class="keyword">new</span> Socket(<span class="string">"127.0.0.1"</span>,<span class="number">8888</span>);</span><br><span class="line">            System.out.println(s);</span><br><span class="line">            s.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h2 id="收发数字"><a href="#收发数字" class="headerlink" title="收发数字"></a>收发数字</h2><p>一旦建立了连接，服务端和客户端就可以通过Socket进行通信了 </p><ol><li>客户端打开输出流，并发送数字</li><li>服务端打开输入流，接受数字，并打印</li></ol><p><strong>Server</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"> </span><br><span class="line">            ServerSocket ss = <span class="keyword">new</span> ServerSocket(<span class="number">8888</span>);</span><br><span class="line"> </span><br><span class="line">            System.out.println(<span class="string">"监听在端口号:8888"</span>);</span><br><span class="line">            Socket s = ss.accept();</span><br><span class="line"> </span><br><span class="line">            <span class="comment">//打开输入流</span></span><br><span class="line">            InputStream is = s.getInputStream();</span><br><span class="line"> </span><br><span class="line">            <span class="comment">//读取客户端发送的数据</span></span><br><span class="line">            <span class="keyword">int</span> msg = is.read();</span><br><span class="line">            <span class="comment">//打印出来</span></span><br><span class="line">            System.out.println(msg);</span><br><span class="line">            is.close();</span><br><span class="line"> </span><br><span class="line">            s.close();</span><br><span class="line">            ss.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p><strong>Cilent</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Socket s = <span class="keyword">new</span> Socket(<span class="string">"127.0.0.1"</span>, <span class="number">8888</span>);</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 打开输出流</span></span><br><span class="line">            OutputStream os = s.getOutputStream();</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 发送数字110到服务端</span></span><br><span class="line">            os.write(<span class="number">110</span>);</span><br><span class="line">            os.close();</span><br><span class="line"> </span><br><span class="line">            s.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h2 id="收发字符串"><a href="#收发字符串" class="headerlink" title="收发字符串"></a>收发字符串</h2><p>直接使用字节流收发字符串比较麻烦，使用数据流对字节流进行封装，这样收发字符串就容易了 </p><ol><li>把输出流封装在DataOutputStream中<br>使用writeUTF发送字符串 </li><li>把输入流封装在DataInputStream<br>使用readUTF读取字符串,并打印</li></ol><p><strong>Server</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//服务端打开端口8888</span></span><br><span class="line">            ServerSocket ss = <span class="keyword">new</span> ServerSocket(<span class="number">8888</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//在8888端口上监听，看是否有连接请求过来</span></span><br><span class="line">            System.out.println(<span class="string">"监听在端口号:8888"</span>);</span><br><span class="line">            Socket s =  ss.accept();</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">"有连接过来"</span> + s);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//打开输入流</span></span><br><span class="line">            InputStream is = s.getInputStream();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//把输入流封装在DataInputStream</span></span><br><span class="line">            DataInputStream dis = <span class="keyword">new</span> DataInputStream(is);</span><br><span class="line">            <span class="comment">//使用readUTF读取字符串</span></span><br><span class="line">            String msg = dis.readUTF();</span><br><span class="line">            System.out.println(msg);</span><br><span class="line">            dis.close();</span><br><span class="line"></span><br><span class="line">            s.close();</span><br><span class="line">            ss.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p><strong>Client</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//连接到本机的8888端口</span></span><br><span class="line">            Socket s = <span class="keyword">new</span> Socket(<span class="string">"127.0.0.1"</span>,<span class="number">8888</span>);</span><br><span class="line">            System.out.println(s);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 打开输出流</span></span><br><span class="line">            OutputStream os = s.getOutputStream();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//把输出流封装在DataOutputStream中</span></span><br><span class="line">            DataOutputStream dos = <span class="keyword">new</span> DataOutputStream(os);</span><br><span class="line">            <span class="comment">//使用writeUTF发送字符串</span></span><br><span class="line">            dos.writeUTF(<span class="string">"愚蠢的弟弟阿！"</span>);</span><br><span class="line">            dos.close();</span><br><span class="line"></span><br><span class="line">            s.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h2 id="多线程聊天"><a href="#多线程聊天" class="headerlink" title="多线程聊天"></a>多线程聊天</h2><p>如果使用单线程开发Socket应用，那么同一时间，要么收消息，要么发消息，不能同时进行。 </p><p>为了实现同时收发消息，就需要用到多线程<br>这是因为接受和发送都在主线程中，不能同时进行。 为了实现同时收发消息，基本设计思路是把收发分别放在不同的线程中进行</p><ol><li>SendThread 发送消息线程</li><li>RecieveThread 接受消息线程</li><li>Server一旦接受到连接，就启动收发两个线程</li><li>Client 一旦建立了连接，就启动收发两个线程</li></ol><blockquote><p><strong>SendThread</strong> 发送消息线程</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SendThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> Socket s;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SendThread</span><span class="params">(Socket s)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.s = s;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            OutputStream os = s.getOutputStream();</span><br><span class="line">            DataOutputStream dos = <span class="keyword">new</span> DataOutputStream(os);</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">                Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">                String str = sc.next();</span><br><span class="line">                dos.writeUTF(str);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>RecieveThread</strong> 接受消息线程</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RecieveThread</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> Socket s;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RecieveThread</span><span class="params">(Socket s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.s = s;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            InputStream is = s.getInputStream();</span><br><span class="line"> </span><br><span class="line">            DataInputStream dis = <span class="keyword">new</span> DataInputStream(is);</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                String msg = dis.readUTF();</span><br><span class="line">                System.out.println(msg);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>Server</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"> </span><br><span class="line">            ServerSocket ss = <span class="keyword">new</span> ServerSocket(<span class="number">8888</span>);</span><br><span class="line"> </span><br><span class="line">            System.out.println(<span class="string">"监听在端口号:8888"</span>);</span><br><span class="line">            Socket s = ss.accept();</span><br><span class="line"> </span><br><span class="line">            <span class="comment">//启动发送消息线程</span></span><br><span class="line">            <span class="keyword">new</span> SendThread(s).start();</span><br><span class="line">            <span class="comment">//启动接受消息线程</span></span><br><span class="line">            <span class="keyword">new</span> RecieveThread(s).start();</span><br><span class="line"> </span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>Client</strong></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Socket s = <span class="keyword">new</span> Socket(<span class="string">"127.0.0.1"</span>, <span class="number">8888</span>);</span><br><span class="line"> </span><br><span class="line">            <span class="comment">// 启动发送消息线程</span></span><br><span class="line">            <span class="keyword">new</span> SendThread(s).start();</span><br><span class="line">            <span class="comment">// 启动接受消息线程</span></span><br><span class="line">            <span class="keyword">new</span> RecieveThread(s).start();</span><br><span class="line"> </span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Quartz</title>
      <link href="/2019/01/11/Quartz/"/>
      <url>/2019/01/11/Quartz/</url>
      
        <content type="html"><![CDATA[<h2 id="介绍Quartz"><a href="#介绍Quartz" class="headerlink" title="介绍Quartz"></a>介绍Quartz</h2><p>Quartz是一个任务调度框架。在某一个有规律的时间点干某件事。并且时间的触发的条件可以非常复杂（比如每月最后一个工作日的17:50），复杂到需要一个专门的框架来干这个事。 Quartz就是来干这样的事，你给它一个触发条件的定义，它负责到了时间点，触发相应的Job起来干活。</p>]]></content>
      
      
      <categories>
          
          <category> Java工具与中间件 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>人事面试</title>
      <link href="/2019/01/09/%E4%BA%BA%E4%BA%8B%E9%9D%A2%E8%AF%95/"/>
      <url>/2019/01/09/%E4%BA%BA%E4%BA%8B%E9%9D%A2%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h2 id="1、-请你自我介绍一下你自己？"><a href="#1、-请你自我介绍一下你自己？" class="headerlink" title="1、 请你自我介绍一下你自己？"></a>1、 请你自我介绍一下你自己？</h2><p>回答提示：一般人回答这个问题过于平常，只说姓名、年龄、爱好、工作经验，这些在简历上都有，其实，企业最希望知道的是求职者能否胜任工作，包括：最强的技能、最深入研究的知识领域、个性中最积极的部分、做过的最成功的事，主要的成就等，这些都可以和学习无关，也可以和学习有关，但要突出积极的个性和做事的能力，说得合情合理企业才会相信。企业很重视一个人的礼貌，求职者要尊重考官，在回答每个问题之后都说一句“谢谢”。企业喜欢有礼貌的求职者。</p><h2 id="2、-你觉得你个性上最大的优点是什么？"><a href="#2、-你觉得你个性上最大的优点是什么？" class="headerlink" title="2、 你觉得你个性上最大的优点是什么？"></a>2、 你觉得你个性上最大的优点是什么？</h2><p>回答提示：沉着冷静、条理清楚、立场坚定、顽强向上。<br>乐于助人和关心他人、适应能力和幽默感、乐观和友爱。</p><h2 id="3、-说说你最大的缺点？"><a href="#3、-说说你最大的缺点？" class="headerlink" title="3、 说说你最大的缺点？"></a>3、 说说你最大的缺点？</h2><p>回答提示：这个问题企业问的概率很大，通常不希望听到直接回答的缺点是什么等，如果求职者说自己小心眼、爱忌妒人、非常懒、脾气大、工作效率低，企业肯定不会录用你。绝对不要自作聪明地回答“我最大的缺点是过于追求完美”，有的人以为这样回答会显得自己比较出色，但事实上，他已经岌芨可危了。企业喜欢求职者从自己的优点说起，中间加一些小缺点，最后再把问题转回到优点上，突出优点的部分。企业喜欢聪明的求职者。</p><h2 id="4、-你对加班的看法？"><a href="#4、-你对加班的看法？" class="headerlink" title="4、 你对加班的看法？"></a>4、 你对加班的看法？</h2><p>回答提示：实际上好多公司问这个问题，并不证明一定要加班。 只是想测试你是否愿意为公司奉献。<br>回答样本：如果是工作需要我会义不容辞加班。我现在单身，没有任何家庭负担，可以全身心的投入工作。但同时，我也会提高工作效率，减少不必要的加班</p><h2 id="5、-你对薪资的要求？"><a href="#5、-你对薪资的要求？" class="headerlink" title="5、 你对薪资的要求？"></a>5、 你对薪资的要求？</h2><p>回 答提示：如果你对薪酬的要求太低，那显然贬低自己的能力；如果你对薪酬的要求太高，那又会显得你分量过重，公司受用不起。一些雇主通常都事先对求聘的职位定下开支预算，因而他们第一次提出的价钱往往是他们所能给予的最高价钱。他们问你只不过想证实一下这笔钱是否足以引起你对该工作的兴趣。<br>回答样本一：“我对工资没有硬性要求。我相信贵公司在处理我的问题上会友善合理。我注重的是找对工作机会，所以只要条件公平，我则不会计较太多<br>回答样本二：我受过系统的软件编程的训练，不需要进行大量的培训。而且我本人也对编程特别感兴趣。因此，我希望公司能根据我的情况和市场标准的水平，给我合理的薪水。<br>回答样本三：如果你必须自己说出具体数目，请不要说一个宽泛的范围，那样你将只能得到最低限度的数字。最好给出一个具体的数字，这样表明你已经对当今的人才市场作了调查，知道像自己这样学历的雇员有什么样的价值。</p><h2 id="6、-在五年的时间内，你的职业规划？"><a href="#6、-在五年的时间内，你的职业规划？" class="headerlink" title="6、 在五年的时间内，你的职业规划？"></a>6、 在五年的时间内，你的职业规划？</h2><p>回答提示：这是每一个应聘者都不希望被问到的问题，但是几乎每个人都会被问到。比较多的答案是“管理者”。但是近几年来，许多公司都已经建立了专门的技术途径。这些工作地位往往被称作“顾问”、“参议技师”或“高级软件工程师”等等。当然，说出其他一些你感兴趣的职位也是可以的，比如产品销售部经理，生产部经理等一些与你的专业有相关背景的工作。要知道，考官总是喜欢有进取心的应聘者，此时如果说“不知道”，或许就会使你丧失一个好机会。最普通的回答应该是“我准备在技术领域有所作为”或“我希望能按照公司的管理思路发展”。</p><h2 id="7、-你朋友对你的评价？"><a href="#7、-你朋友对你的评价？" class="headerlink" title="7、 你朋友对你的评价？"></a>7、 你朋友对你的评价？</h2><p>回答提示： 想从侧面了解一下你的性格及与人相处的问题。<br>回答样本：“我的朋友都说我是一个可以信赖的人。因为，我一旦答应别人的事情，就一定会做到。如果我做不到，我就不会轻易许诺。<br>回答样本：”我觉的我是一个比较随和的人，与不同的人都可以友好相处。在我与人相处时，我总是能站在别人的角度考虑问题“</p><h2 id="8、-你还有什么问题要问吗？"><a href="#8、-你还有什么问题要问吗？" class="headerlink" title="8、 你还有什么问题要问吗？"></a>8、 你还有什么问题要问吗？</h2><p>回答提示：企业的这个问题看上去可有可无，其实很关键，企业不喜欢说“没有问题”的人，因为其很注重员工的个性和创新能力。企业不喜欢求职者问个人福利之类的问题，如果有人这样问：贵公司对新入公司的员工有没有什么培训项目，我可以参加吗？或者说贵公司的晋升机制是什么样的？企业将很欢迎，因为体现出你对学习的热情和对公司的忠诚度以及你的上进心。</p><h2 id="9、-如果通过这次面试我们单位录用了你，但工作一段时间却发现你根本不适合这个职位，你怎么办？"><a href="#9、-如果通过这次面试我们单位录用了你，但工作一段时间却发现你根本不适合这个职位，你怎么办？" class="headerlink" title="9、 如果通过这次面试我们单位录用了你，但工作一段时间却发现你根本不适合这个职位，你怎么办？"></a>9、 如果通过这次面试我们单位录用了你，但工作一段时间却发现你根本不适合这个职位，你怎么办？</h2><p>回答提示：一段时间发现工作不适合我，有两种情况：</p><h2 id="1、如果你确实热爱这个职业，那你就要不断学习，虚心向领导和同事学习业务知识和处事经验，了解这个职业的精神内涵和职业要求，力争减少差距；"><a href="#1、如果你确实热爱这个职业，那你就要不断学习，虚心向领导和同事学习业务知识和处事经验，了解这个职业的精神内涵和职业要求，力争减少差距；" class="headerlink" title="1、如果你确实热爱这个职业，那你就要不断学习，虚心向领导和同事学习业务知识和处事经验，了解这个职业的精神内涵和职业要求，力争减少差距；"></a>1、如果你确实热爱这个职业，那你就要不断学习，虚心向领导和同事学习业务知识和处事经验，了解这个职业的精神内涵和职业要求，力争减少差距；</h2><h2 id="2、你觉得这个职业可有可无，那还是趁早换个职业，去发现适合你的，你热爱的职业，那样你的发展前途也会大点，对单位和个人都有好处。"><a href="#2、你觉得这个职业可有可无，那还是趁早换个职业，去发现适合你的，你热爱的职业，那样你的发展前途也会大点，对单位和个人都有好处。" class="headerlink" title="2、你觉得这个职业可有可无，那还是趁早换个职业，去发现适合你的，你热爱的职业，那样你的发展前途也会大点，对单位和个人都有好处。"></a>2、你觉得这个职业可有可无，那还是趁早换个职业，去发现适合你的，你热爱的职业，那样你的发展前途也会大点，对单位和个人都有好处。</h2><h2 id="10、-在完成某项工作时，你认为领导要求的方式不是最好的，自己还有更好的方法，你应该怎么做？"><a href="#10、-在完成某项工作时，你认为领导要求的方式不是最好的，自己还有更好的方法，你应该怎么做？" class="headerlink" title="10、 在完成某项工作时，你认为领导要求的方式不是最好的，自己还有更好的方法，你应该怎么做？"></a>10、 在完成某项工作时，你认为领导要求的方式不是最好的，自己还有更好的方法，你应该怎么做？</h2><p>回答提示：①.原则上我会尊重和服从领导的工作安排；同时私底下找机会以请教的口吻，婉转地表达自己的想法，看看领导是否能改变想法；<br>②如果领导没有采纳我的建议，我也同样会按领导的要求认真地去完成这项工作；<br>③.还有一种情况，假如领导要求的方式违背原则，我会坚决提出反对意见；如领导仍固执己见，我会毫不犹豫地再向上级领导反映。</p><h2 id="11、-如果你的工作出现失误，给本公司造成经济损失，你认为该怎么办？"><a href="#11、-如果你的工作出现失误，给本公司造成经济损失，你认为该怎么办？" class="headerlink" title="11、 如果你的工作出现失误，给本公司造成经济损失，你认为该怎么办？"></a>11、 如果你的工作出现失误，给本公司造成经济损失，你认为该怎么办？</h2><p>回答提示：<br>①我本意是为公司努力工作，如果造成经济损失，我认为首要的问题是想方设法去弥补或挽回经济损失。如果我无能力负责，希望单位帮助解决；<br>②是责任问题。分清责任，各负其责，如果是我的责任，我甘愿受罚；如果是一个我负责的团队中别人的失误，也不能幸灾乐祸，作为一个团队，需要互相提携共同完成工作，安慰同事并且帮助同事查找原因总结经验。<br>③总结经验教训，一个人的一生不可能不犯错误，重要的是能从自己的或者是别人的错误中吸取经验教训，并在今后的工作中避免发生同类的错误。检讨自己的工作方法、分析问题的深度和力度是否不够，以致出现了本可以避免的错误</p><h2 id="12、-如果你在这次考试中没有被录用，你怎么打算？"><a href="#12、-如果你在这次考试中没有被录用，你怎么打算？" class="headerlink" title="12、 如果你在这次考试中没有被录用，你怎么打算？"></a>12、 如果你在这次考试中没有被录用，你怎么打算？</h2><p>回答提示：现在的社会是一个竞争的社会,从这次面试中也可看出这一点,有竞争就必然有优劣,有成功必定就会有失败.往往成功的背后有许多的困难和挫折,如果这次失败了也仅仅是一次而已,只有经过经验经历的积累才能塑造出一个完全的成功者。我会从以下几个方面来正确看待这次失败.<br>第一、要敢于面对,面对这次失败不气馁,接受已经失去了这次机会就不会回头这个现实,从心理意志和精神上体现出对这次失败的抵抗力。要有自信,相信自己经历了这次之后经过努力一定能行.能够超越自我.<br>第二、善于反思,对于这次面试经验要认真总结,思考剖析,能够从自身的角度找差距。正确对待自己,实事求是地评价自己,辩证的看待自己的长短得失,做一个明白人.<br>第三、走出阴影,要克服这一次失败带给自己的心理压力,时刻牢记自己弱点,防患于未然,加强学习,提高自身素质.<br>第四、认真工作,回到原单位岗位上后,要实实在在、踏踏实实地工作,三十六行,行行出状元,争取在本岗位上做出一定的成绩.<br>第五、再接再厉,成为软件工程师或网络工程师一直是我的梦想,以后如果有机会我仍然后再次参加竞争.</p><h2 id="13、-如果你做的一项工作受到上级领导的表扬，但你主管领导却说是他做的，你该怎样？"><a href="#13、-如果你做的一项工作受到上级领导的表扬，但你主管领导却说是他做的，你该怎样？" class="headerlink" title="13、 如果你做的一项工作受到上级领导的表扬，但你主管领导却说是他做的，你该怎样？"></a>13、 如果你做的一项工作受到上级领导的表扬，但你主管领导却说是他做的，你该怎样？</h2><p>回答提示：我首先不会找那位上级领导说明这件事，我会主动找我的主管领导来沟通，因为沟通是解决人际关系的最好办法，但结果会有两种：1.我的主管领导认识到自己的错误，我想我会视具体情况决定是否原谅他；2.他更加变本加厉的来威胁我，那我会毫不犹豫地找我的上级领导反映此事，因为他这样做会造成负面影响，对今后的工作不利。</p><h2 id="14、-谈谈你对跳槽的看法？"><a href="#14、-谈谈你对跳槽的看法？" class="headerlink" title="14、 谈谈你对跳槽的看法？"></a>14、 谈谈你对跳槽的看法？</h2><p>回答提示：（1）正常的”跳槽”能促进人才合理流动，应该支持；<br>（2）频繁的跳槽对单位和个人双方都不利，应该反对。</p><h2 id="15、-工作中你难以和同事、上司相处，你该怎么办？"><a href="#15、-工作中你难以和同事、上司相处，你该怎么办？" class="headerlink" title="15、 工作中你难以和同事、上司相处，你该怎么办？"></a>15、 工作中你难以和同事、上司相处，你该怎么办？</h2><p>回答提示：<br>①我会服从领导的指挥，配合同事的工作。<br>②我会从自身找原因，仔细分析是不是自己工作做得不好让领导不满意，同事看不惯。还要看看是不是为人处世方面做得不好。如果是这样的话 我会努力改正。<br>③如果我找不到原因，我会找机会跟他们沟通，请他们指出我的不足。有问题就及时改正。<br>④作为优秀的员工，应该时刻以大局为重，即使在一段时间内，领导和同事对我不理解，我也会做好本职工作，虚心向他们学习，我相信，他们会看见我在努力，总有一天会对我微笑的！</p><h2 id="16、-假设你在某单位工作，成绩比较突出，得到领导的肯定。但同时你发现同事们越来越孤立你，你怎么看这个问题？你准备怎么办？"><a href="#16、-假设你在某单位工作，成绩比较突出，得到领导的肯定。但同时你发现同事们越来越孤立你，你怎么看这个问题？你准备怎么办？" class="headerlink" title="16、 假设你在某单位工作，成绩比较突出，得到领导的肯定。但同时你发现同事们越来越孤立你，你怎么看这个问题？你准备怎么办？"></a>16、 假设你在某单位工作，成绩比较突出，得到领导的肯定。但同时你发现同事们越来越孤立你，你怎么看这个问题？你准备怎么办？</h2><p>回答提示：<br>①成绩比较突出，得到领导的肯定是件好事情，以后更加努力<br>②检讨一下自己是不是对工作的热心度超过同事间交往的热心了，加强同事间的交往及共同的兴趣爱好。<br>③工作中，切勿伤害别人的自尊心<br>④不再领导前拨弄是非<br>⑤乐于助人对面</p><h2 id="17、-你最近是否参加了培训课程？谈谈培训课程的内容。是公司资助还是自费参加？"><a href="#17、-你最近是否参加了培训课程？谈谈培训课程的内容。是公司资助还是自费参加？" class="headerlink" title="17、 你最近是否参加了培训课程？谈谈培训课程的内容。是公司资助还是自费参加？"></a>17、 你最近是否参加了培训课程？谈谈培训课程的内容。是公司资助还是自费参加？</h2><p>回答提示：可以回答一些线上的自我提升的平台,极客学院,慕课网等.</p><h2 id="18、-你对于我们公司了解多少？"><a href="#18、-你对于我们公司了解多少？" class="headerlink" title="18、 你对于我们公司了解多少？"></a>18、 你对于我们公司了解多少？</h2><p>回答提示：在去公司面试前上网查一下该公司主营业务。如回答：贵公司有意改变策略，加强与国外大厂的OEM合作，自有品牌的部分则透过海外经销商。</p><h2 id="19、-请说出你选择这份工作的动机？"><a href="#19、-请说出你选择这份工作的动机？" class="headerlink" title="19、 请说出你选择这份工作的动机？"></a>19、 请说出你选择这份工作的动机？</h2><p>回答提示：这是想知道面试者对这份工作的热忱及理解度，并筛选因一时兴起而来应试的人，如果是无经验者，可以强调“就算职种不同，也希望有机会发挥之前的经验”。</p><h2 id="20、-你最擅长的技术方向是什么？"><a href="#20、-你最擅长的技术方向是什么？" class="headerlink" title="20、 你最擅长的技术方向是什么？"></a>20、 你最擅长的技术方向是什么？</h2><p>回答提示：说和你要应聘的职位相关的课程，表现一下自己的热诚没有什么坏处。</p><h2 id="21、-你能为我们公司带来什么呢？"><a href="#21、-你能为我们公司带来什么呢？" class="headerlink" title="21、 你能为我们公司带来什么呢？"></a>21、 你能为我们公司带来什么呢？</h2><p>回答提示：<br>其实我们为公司所做的，也就是为自己所做的，你在为公司不断付出，取得业绩的同时，也是实现了自己价值，自我成为，所以在回答“你能为公司带来什么”时，不妨站在以上角度</p><h2 id="22、-最能概括你自己的三个词是什么？"><a href="#22、-最能概括你自己的三个词是什么？" class="headerlink" title="22、 最能概括你自己的三个词是什么？"></a>22、 最能概括你自己的三个词是什么？</h2><p>回答提示：<br>我经常用的三个词是：适应能力强，有责任心和做事有始终，结合具体例子向主考官解释，</p><h2 id="23、-你的业余爱好是什么？"><a href="#23、-你的业余爱好是什么？" class="headerlink" title="23、 你的业余爱好是什么？"></a>23、 你的业余爱好是什么？</h2><p>回答提示：找一些富于团体合作精神的，这里有一个真实的故事：有人被否决掉，因为他的爱好是深海潜水。主考官说：因为这是一项单人活动，我不敢肯定他能否适应团体工作。</p><h2 id="24、-作为被面试者给我打一下分"><a href="#24、-作为被面试者给我打一下分" class="headerlink" title="24、 作为被面试者给我打一下分"></a>24、 作为被面试者给我打一下分</h2><p>回答提示：试着列出四个优点和一个非常非常非常小的缺点，（可以抱怨一下设施，没有明确责任人的缺点是不会有人介意的）。</p><h2 id="25、-你怎么理解你应聘的职位？"><a href="#25、-你怎么理解你应聘的职位？" class="headerlink" title="25、 你怎么理解你应聘的职位？"></a>25、 你怎么理解你应聘的职位？</h2><p>回答提示：把岗位职责和任务及工作态度阐述一下</p><h2 id="26、-喜欢这份工作的哪一点？"><a href="#26、-喜欢这份工作的哪一点？" class="headerlink" title="26、 喜欢这份工作的哪一点？"></a>26、 喜欢这份工作的哪一点？</h2><p>回 答提示：相信其实大家心中一定都有答案了吧！每个人的价值观不同，自然评断的标准也会不同，但是，在回答面试官这个问题时可不能太直接就把自己心理的话说出来，尤其是薪资方面的问题，不过一些无伤大雅的回答是不错的考虑，如交通方便，工作性质及内容颇能符合自己的兴趣等等都是不错的答案，不过如果这时自己能仔细思考出这份工作的与众不同之处，相信在面试上会大大加分。</p><h2 id="27、-为什么要离职"><a href="#27、-为什么要离职" class="headerlink" title="27、 为什么要离职?"></a>27、 为什么要离职?</h2><p>回答提示：<br>①回答这个问题时一定要小心，就算在前一个工作受到再大的委屈，对公司有多少的怨言，都千万不要表现出来，尤其要避免对公司本身主管的批评，避免面试官的负面情绪及印象；建议此时最好的回答方式是将问题归咎在自己身上，例如觉得工作没有学习发展的空间，自己想在面试工作的相关产业中多加学习，或是前一份工作与自己的生涯规划不合等等，回答的答案最好是积极正面的。<br>②我希望能获得一份更好的工作，如果机会来临，我会抓住；我觉得目前的工作，已经达到顶峰，即沒有升迁机会。 </p><h2 id="28、-说说你对行业、技术发展趋势的看法？"><a href="#28、-说说你对行业、技术发展趋势的看法？" class="headerlink" title="28、 说说你对行业、技术发展趋势的看法？"></a>28、 说说你对行业、技术发展趋势的看法？</h2><p>回答提示：企业对这个问题很感兴趣，只有有备而来的求职者能够过关。求职者可以直接在网上查找对你所申请的行业部门的信息，只有深入了解才能产生独特的见解。企业认为最聪明的求职者是对所面试的公司预先了解很多，包括公司各个部门，发展情况，在面试回答问题的时候可以提到所了解的情况，企业欢迎进入企业的人是“知己”，而不是“盲人”。</p><h2 id="29、-对工作的期望与目标何在？"><a href="#29、-对工作的期望与目标何在？" class="headerlink" title="29、 对工作的期望与目标何在？"></a>29、 对工作的期望与目标何在？</h2><p>回答提示：这是面试者用来评断求职者是否对自己有一定程度的期望、对这份工作是否了解的问题。对于工作有确实学习目标的人通常学习较快，对于新工作自然较容易进入状况，这时建议你，最好针对工作的性质找出一个确实的答案，如业务员的工作可以这样回答：“我的目标是能成为一个超级业务员，将公司的产品广泛的推销出去，达到最好的业绩成效；为了达到这个目标，我一定会努力学习，而我相信以我认真负责的态度，一定可以达到这个目标。”其他类的工作也可以比照这个方式来回答，只要在目标方面稍微修改一下就可以了。</p><h2 id="30、-说说你的家庭。"><a href="#30、-说说你的家庭。" class="headerlink" title="30、 说说你的家庭。"></a>30、 说说你的家庭。</h2><p>回答提示：企业面试时询问家庭问题不是非要知道求职者家庭的情况，探究隐私，企业不喜欢探究个人隐私，而是要了解家庭背景对求职者的塑造和影响。企业希望听到的重点也在于家庭对求职者的积极影响。企业最喜欢听到的是：我很爱我的家庭！我的家庭一向很和睦，虽然我的父亲和母亲都是普通人，但是从小，我就看到我父亲起早贪黑，每天工作特别勤劳，他的行动无形中培养了我认真负责的态度和勤劳的精神。我母亲为人善良，对人热情，特别乐于助人，所以在单位人缘很好，她的一言一行也一直在教导我做人的道理。企业相信，和睦的家庭关系对一个人的成长有潜移默化的影响。</p><h2 id="31、-就你申请的这个职位，你认为你还欠缺什么？"><a href="#31、-就你申请的这个职位，你认为你还欠缺什么？" class="headerlink" title="31、 就你申请的这个职位，你认为你还欠缺什么？"></a>31、 就你申请的这个职位，你认为你还欠缺什么？</h2><p>回答提示：企业喜欢问求职者弱点，但精明的求职者一般不直接回答。他们希望看到这样的求职者：继续重复自己的优势，然后说：“对于这个职位和我的能力来说，我相信自己是可以胜任的，只是缺乏经验，这个问题我想我可以进入公司以后以最短的时间来解决，我的学习能力很强，我相信可以很快融入公司的企业文化，进入工作状态。”企业喜欢能够巧妙地躲过难题的求职者。</p><h2 id="32、-你欣赏哪种性格的人？"><a href="#32、-你欣赏哪种性格的人？" class="headerlink" title="32、 你欣赏哪种性格的人？"></a>32、 你欣赏哪种性格的人？</h2><p>回答提示：诚实、不死板而且容易相处的人、有”实际行动”的人。</p><h2 id="33、-你通常如何处理別人的批评？"><a href="#33、-你通常如何处理別人的批评？" class="headerlink" title="33、 你通常如何处理別人的批评？"></a>33、 你通常如何处理別人的批评？</h2><p>回答提示：①沈默是金。不必说什么，否则情况更糟，不过我会接受建设性的批评；②我会等大家冷靜下来再讨论。</p><h2 id="34、-你怎样对待自己的失敗？"><a href="#34、-你怎样对待自己的失敗？" class="headerlink" title="34、 你怎样对待自己的失敗？"></a>34、 你怎样对待自己的失敗？</h2><p>回答提示：我们大家生来都不是十全十美的，我相信我有第二个机会改正我的错误。</p><h2 id="35、-什么会让你有成就感？"><a href="#35、-什么会让你有成就感？" class="headerlink" title="35、 什么会让你有成就感？"></a>35、 什么会让你有成就感？</h2><p>回答提示：为贵公司竭力效劳；尽我所能，完成一个项目</p><h2 id="36、-眼下你生活中最重要的是什么？"><a href="#36、-眼下你生活中最重要的是什么？" class="headerlink" title="36、 眼下你生活中最重要的是什么？"></a>36、 眼下你生活中最重要的是什么？</h2><p>回答提示：对我来说，能在这个领域找到工作是最重要的；望能在贵公司任职对我说最重要。</p><h2 id="37、-你为什么愿意到我们公司来工作？"><a href="#37、-你为什么愿意到我们公司来工作？" class="headerlink" title="37、 你为什么愿意到我们公司来工作？"></a>37、 你为什么愿意到我们公司来工作？</h2><p>回答提示：对于这个问题，你要格外小心，如果你已经对该单位作了研究，你可以回答一些详细的原因，像“公司本身的高技术开发环境很吸引我。”，“我同公司出生在同样的时代，我希望能够进入一家与我共同成长的公司。”“你们公司一直都稳定发展，在近几年来在市场上很有竞争力。”或者“我认为贵公司能够给我提供一个与众不同的发展道路。”这都显示出你已经做了一些调查，也说明你对自己的未来有了较为具体的远景规划。</p><h2 id="38、-你和别人发生过争执吗？你是怎样解决的？"><a href="#38、-你和别人发生过争执吗？你是怎样解决的？" class="headerlink" title="38、 你和别人发生过争执吗？你是怎样解决的？"></a>38、 你和别人发生过争执吗？你是怎样解决的？</h2><p>回答提示：这是面试中最险恶的问题。其实是考官布下的一个陷阱。千万不要说任何人的过错。应知成功解决矛盾是一个协作团体中成员所必备的能力。假如你工作在一个服务行业，这个问题简直成了最重要的一个环节。你是否能获得这份工作，将取决于这个问题的回答。考官希望看到你是成熟且乐于奉献的。他们通过这个问题了解你的成熟度和处世能力。在没有外界干涉的情况下，通过妥协的方式来解决才是正确答案。</p><h2 id="39、-问题：你做过的哪件事最令自己感到骄傲"><a href="#39、-问题：你做过的哪件事最令自己感到骄傲" class="headerlink" title="39、 问题：你做过的哪件事最令自己感到骄傲?"></a>39、 问题：你做过的哪件事最令自己感到骄傲?</h2><p>回答提示：这是考官给你的一个机会，让你展示自己把握命运的能力。这会体现你潜在的领导能力以及你被提升的可能性。假如你应聘于一个服务性质的单位，你很可能会被邀请去午餐。记住：你的前途取决于你的知识、你的社交能力和综合表现。</p><h2 id="40、-你新到一个部门-一天一个客户来找你解决问题-你努力想让他满意，可是始终达不到群众得满意-他投诉你们部门工作效率低-你这个时候怎么作"><a href="#40、-你新到一个部门-一天一个客户来找你解决问题-你努力想让他满意，可是始终达不到群众得满意-他投诉你们部门工作效率低-你这个时候怎么作" class="headerlink" title="40、 你新到一个部门,一天一个客户来找你解决问题,你努力想让他满意，可是始终达不到群众得满意,他投诉你们部门工作效率低,你这个时候怎么作?"></a>40、 你新到一个部门,一天一个客户来找你解决问题,你努力想让他满意，可是始终达不到群众得满意,他投诉你们部门工作效率低,你这个时候怎么作?</h2><p>回 答提示：(1)首先，我会保持冷静。作为一名工作人员，在工作中遇到各种各样的问题是正常的，关键是如何认识它，积极应对，妥善处理。 (2)其次，我会反思一下客户不满意的原因。一是看是否是自己在解决问题上的确有考虑的不周到的地方，二是看是否是客户不太了解相关的服务规定而提出超出规定的要求，三是看是否是客户了解相关的规定，但是提出的要求不合理。 (3)再次，根据原因采取相对的对策。如果是自己确有不周到的地方，按照服务规定作出合理的安排，并向客户作出解释；如果是客户不太了解政策规定而造成的误解，我会向他作出进一步的解释，消除他的误会；如果是客户提出的要求不符合政策规定，我会明确地向他指出。 (4)再次，我会把整个事情的处理情况向领导作出说明，希望得到他的理解和支持。(5)我不会因为客户投诉了我而丧失工作的热情和积极性，而会一如既往地牢记为客户服务的宗旨，争取早日做一名领导信任、公司放心、客户满意的职员。</p><h2 id="41、-对这项工作，你有哪些可预见的困难？"><a href="#41、-对这项工作，你有哪些可预见的困难？" class="headerlink" title="41、 对这项工作，你有哪些可预见的困难？"></a>41、 对这项工作，你有哪些可预见的困难？</h2><p>回答提示：：①不宜直接说出具体的困难，否则可能令对方怀疑应聘者不行；②可以尝试迂回战术，说出应聘者对困难所持有的态度——“工作中出现一些困难是正常的，也是难免的，但是只要有坚忍不拔的毅力、良好的合作精神以及事前周密而充分的准备，任何困难都是可以克服。”<br>分析：一般问这个问题，面试者的希望就比较大了，因为已经在谈工作细节。但常规思路中的回答，又被面试官“骗”了。当面试官询问这个问题的时候，有两个目的。第一，看看应聘者是不是在行，说出的困难是不是在这个职位中一般都不可避免的问题。第二，是想看一下应聘者解决困难的手法对不对，及公司能否提供这样的资源。而不是想了解应聘者对困难的态度。</p><h2 id="42、-如果我录用你，你将怎样开展工作？”"><a href="#42、-如果我录用你，你将怎样开展工作？”" class="headerlink" title="42、 如果我录用你，你将怎样开展工作？”"></a>42、 如果我录用你，你将怎样开展工作？”</h2><p>回答提示： ①如果应聘者对于应聘的职位缺乏足够的了解，最好不要直接说出自己开展工作的具体办法；②可以尝试采用迂回战术来回答，如“首先听取领导的指示和要求，然后就有关情况进行了解和熟悉，接下来制定一份近期的工作计划并报领导批准，最后根据计划开展工作。”<br>分析：这个问题的主要目的也是了解应聘者的工作能力和计划性、条理性，而且重点想要知道细节。如果向思路中所讲的迂回战术，面试官会认为回避问题，如果引导了几次仍然是回避的话。此人绝对不会录用了。</p><h2 id="43、-你希望与什么样的上级共事？"><a href="#43、-你希望与什么样的上级共事？" class="headerlink" title="43、 你希望与什么样的上级共事？"></a>43、 你希望与什么样的上级共事？</h2><p>回答提示：①通过应聘者对上级的“希望”可以判断出应聘者对自我要求的意识，这既上一个陷阱，又是一次机会；②最好回避对上级具体的希望，多谈对自己的要求；③如“做为刚步入社会的新人，我应该多要求自己尽快熟悉环境、适应环境，而不应该对环境提出什么要求，只要能发挥我的专长就可以了<br>分析：这个问题比较好的回答是，希望我的上级能够在工作中对我多指导，对我工作中的错误能够立即指出。总之，从上级指导这个方面谈，不会有大的纰漏。</p><h2 id="44、-在完成某项工作时，你认为领导要求的方式不是最好的，自己还有更好的方法，你应该怎么做？"><a href="#44、-在完成某项工作时，你认为领导要求的方式不是最好的，自己还有更好的方法，你应该怎么做？" class="headerlink" title="44、 在完成某项工作时，你认为领导要求的方式不是最好的，自己还有更好的方法，你应该怎么做？"></a>44、 在完成某项工作时，你认为领导要求的方式不是最好的，自己还有更好的方法，你应该怎么做？</h2><p>回答提示：<br>①.原则上我会尊重和服从领导的工作安排；同时私底下找机会以请教的口吻，婉转地表达自己的想法，看看领导是否能改变想法；<br>②如果领导没有采纳我的建议，我也同样会按领导的要求认真地去完成这项工作；<br>③.还有一种情况，假如领导要求的方式违背原则，我会坚决提出反对意见；如领导仍固执己见，我会毫不犹豫地再向上级领导反映。</p><h2 id="45、-与上级意见不一是，你将怎么办？”"><a href="#45、-与上级意见不一是，你将怎么办？”" class="headerlink" title="45、 与上级意见不一是，你将怎么办？”"></a>45、 与上级意见不一是，你将怎么办？”</h2><p>回答提示：①一般可以这样回答“我会给上级以必要的解释和提醒，在这种情况下，我会服从上级的意见。”②如果面试你的是总经理，而你所应聘的职位另有一位经理，且这位经理当时不在场，可以这样回答：“对于非原则性问题，我会服从上级的意见，对于涉及公司利益的重大问题，我希望能向更高层领导反映。”<br>分析：这个问题的标准答案是思路1，如果用2的回答，必死无疑。你没有摸清楚改公司的内部情况，先想打小报告，这样的人没有人敢要。</p><h2 id="46、-你工作经验欠缺，如何能胜任这项工作？"><a href="#46、-你工作经验欠缺，如何能胜任这项工作？" class="headerlink" title="46、 你工作经验欠缺，如何能胜任这项工作？"></a>46、 你工作经验欠缺，如何能胜任这项工作？</h2><p>常规思路：①如果招聘单位对应届毕业生的应聘者提出这个问题，说明招聘公司并不真正在乎“经验”，关键看应聘者怎样回答；②对这个问题的回答最好要体现出应聘者的诚恳、机智、果敢及敬业；③如“作为应届毕业生，在工作经验方面的确会有所欠缺，因此在读书期间我一直利用各种机会在这个行业里做兼职。我也发现，实际工作远比书本知识丰富、复杂。但我有较强的责任心、适应能力和学习能力，而且比较勤奋，所以在兼职中均能圆满完成各项工作，从中获取的经验也令我受益非浅。请贵公司放心，学校所学及兼职的工作经验使我一定能胜任这个职位。” 点评：这个问题思路中的答案尚可。突出自己的吃苦能力和适应性以及学习能力（不是学习成绩）为好。</p><h2 id="47、-您在前一家公司的离职原因是什么？"><a href="#47、-您在前一家公司的离职原因是什么？" class="headerlink" title="47、 您在前一家公司的离职原因是什么？"></a>47、 您在前一家公司的离职原因是什么？</h2><p>回答提示：①最重要的是：应聘者要使找招聘单位相信，应聘者在过往的单位的“离职原因”在此家招聘单位里不存在；②避免把“离职原因”说得太详细、太具体；③不能掺杂主观的负面感受，如“太辛苦”、“人际关系复杂”、“管理太混乱”、“公司不重视人才”、“公司排斥我们某某的员工”等；④但也不能躲闪、回避，如“想换换环境”、“个人原因”等；⑤不能涉及自己负面的人格特征，如不诚实、懒惰、缺乏责任感、不随和等；⑥尽量使解释的理由为应聘者个人形象添彩；⑦相关例子：如“我离职是因为这家公司倒闭；我在公司工作了三年多，有较深的感情；从去年始，由于市场形势突变，公司的局面急转直下；到眼下这一步我觉得很遗憾，但还要面对显示，重新寻找能发挥我能力的舞台。”同一个面试问题并非只有一个答案，而同一个答案并不是在任何面试场合都有效，关键在应聘者掌握了规律后，对面试的具体情况进行把握，有意识地揣摩面试官提出问题的心理背景，然后投其所好。<br>分析：除非是薪资太低，或者是最初的工作，否则不要用薪资作为理由。“求发展”也被考官听得太多，离职理由要根据每个人的真实离职理由来设计，但是在回答时一定要表现得真诚。实在想不出来的时候，家在外地可以说是因为家中有事，须请假几个月，公司又不可能准假，所以辞职。这个答案一般面试官还能接受。</p><h2 id="48、-你工作经验欠缺，如何能胜任这项工作？"><a href="#48、-你工作经验欠缺，如何能胜任这项工作？" class="headerlink" title="48、 你工作经验欠缺，如何能胜任这项工作？"></a>48、 你工作经验欠缺，如何能胜任这项工作？</h2><p>回答提示：①如果招聘单位对应届毕业生的应聘者提出这个问题，说明招聘公司并不真正在乎“经验”，关键看应聘者怎样回答；②对这个问题的回答最好要体现出应聘者的诚恳、机智、果敢及敬业；③如“作为应届毕业生，在工作经验方面的确会有所欠缺，因此在读书期间我一直利用各种机会在这个行业里做兼职。我也发现，实际工作远比书本知识丰富、复杂。但我有较强的责任心、适应能力和学习能力，而且比较勤奋，所以在兼职中均能圆满完成各项工作，从中获取的经验也令我受益非浅。请贵公司放心，学校所学及兼职的工作经验使我一定能胜任这个职位。”<br>分析：这个问题思路中的答案尚可。突出自己的吃苦能力和适应性以及学习能力（不是学习成绩）为好。</p><h2 id="49、-为了做好你工作份外之事，你该怎样获得他人的支持和帮助？"><a href="#49、-为了做好你工作份外之事，你该怎样获得他人的支持和帮助？" class="headerlink" title="49、 为了做好你工作份外之事，你该怎样获得他人的支持和帮助？"></a>49、 为了做好你工作份外之事，你该怎样获得他人的支持和帮助？</h2><p>回答提示：每个公司都在不断变化发展的过程中；你当然希望你的员工也是这样。你希望得到那些希望并欢迎变化的人，因为这些人明白，为了公司的发展，变化是公司日常生活中重要组成部分。这样的员工往往很容易适应公司的变化，并会对变化做出积极的响应。此外，他们遇到矛盾和问题时，也能泰然处之。下面的问题能够考核应聘者这方面的能力。<br>据说有人能从容避免正面冲突。请讲一下你在这方面的经验和技巧。<br>有些时候，我们得和我们不喜欢的人在一起共事。说说你曾经克服了性格方面的冲突而取得预期工作效果的经历。</p><h2 id="50、-如果你在这次面试中没有被录用，你怎么打算？"><a href="#50、-如果你在这次面试中没有被录用，你怎么打算？" class="headerlink" title="50、 如果你在这次面试中没有被录用，你怎么打算？"></a>50、 如果你在这次面试中没有被录用，你怎么打算？</h2><p>回答提示：现在的社会是一个竞争的社会,从这次面试中也可看出这一点,有竞争就必然有优劣,有成功必定就会有失败.往往成功的背后有许多的困难和挫折,如果这次失败了也仅仅是一次而已,只有经过经验经历的积累才能塑造出一个完全的成功者。我会从以下几个方面来正确看待这次失败.<br>第一、要敢于面对,面对这次失败不气馁,接受已经失去了这次机会就不会回头这个现实,从心理意志和精神上体现出对这次失败的抵抗力。要有自信,相信自己经历了这次之后经过努力一定能行.能够超越自我.<br>第二、善于反思,对于这次面试经验要认真总结,思考剖析,能够从自身的角度找差距。正确对待自己,实事求是地评价自己,辩证的看待自己的长短得失,做一个明白人.<br>第三、走出阴影,要克服这一次失败带给自己的心理压力,时刻牢记自己弱点,防患于未然,加强学习,提高自身素质.<br>第四、认真工作,回到原单位岗位上后,要实实在在、踏踏实实地工作,三十六行,行行出状元,争取在本岗位上做出一定的成绩.<br>第五、再接再厉,成为国家公务员一直是我的梦想,以后如果有机会我仍然后再次参加竞争.</p><h2 id="51、-假如你晚上要去送一个出国的同学去机场，可单位临时有事非你办不可，你怎么办？"><a href="#51、-假如你晚上要去送一个出国的同学去机场，可单位临时有事非你办不可，你怎么办？" class="headerlink" title="51、 假如你晚上要去送一个出国的同学去机场，可单位临时有事非你办不可，你怎么办？"></a>51、 假如你晚上要去送一个出国的同学去机场，可单位临时有事非你办不可，你怎么办？</h2><p>回答提示：我觉得工作是第一位的，但朋友间的情谊也是不能偏废的。这个问题我觉得要按照当时具体的情况来决定。<br>（1）、如果我的朋友晚上9点中的飞机，而我的 加班八点就能够完成的话，那就最理想了，干完工作去机场，皆大欢喜。<br>（2）、如果说工作不是很紧急，加班仅仅是为了明天上班的时候能把报告交到办公室，那完全可以跟领导打声招呼，先去机场然后回来加班，晚点睡就是了。<br>（3）、如果工作很紧急，两者不可能兼顾的情况下，我觉得可以由两种选择。1）如果不是全单位都加班的话，是不是可以要其他同事来代替以下工作，自己去机场，哪怕就是代替你离开的那一会儿。2）如果连这一点都做不到的话，<br>那只好忠义不能两全了，打电话给朋友解释一下，小心他会理解，毕竟工作做完了就完了，朋友还是可以再见面的。</p><h2 id="52、-如果通过这次面试我们单位录用了你，但工作一段时间却发现你根本不适合这个职位，你怎么办？"><a href="#52、-如果通过这次面试我们单位录用了你，但工作一段时间却发现你根本不适合这个职位，你怎么办？" class="headerlink" title="52、 如果通过这次面试我们单位录用了你，但工作一段时间却发现你根本不适合这个职位，你怎么办？"></a>52、 如果通过这次面试我们单位录用了你，但工作一段时间却发现你根本不适合这个职位，你怎么办？</h2><p>回答提示：一段时间发现工作不适合我，有两种情况：</p><p>1、如果你确实热爱这个职业，那你就要不断学习，虚心向领导和同事学习业务知识和处事经验，了解这个职业的精神内涵和职业要求，力争减少差距；</p><p>2、你觉得这个职业可有可无，那还是趁早换个职业，去发现适合你的，你热爱的职业，那样你的发展前途也会大点，对单位和个人都有好处。</p><h2 id="53、-你做过的哪件事最令自己感到骄傲"><a href="#53、-你做过的哪件事最令自己感到骄傲" class="headerlink" title="53、 你做过的哪件事最令自己感到骄傲?"></a>53、 你做过的哪件事最令自己感到骄傲?</h2><p>回答提示：这是考官给你的一个机会，让你展示自己把握命运的能力。这会体现你潜在的领导能力以及你被提升的可能性。假如你应聘于一个服务性质的单位，你很可能会被邀请去午餐。记住：你的前途取决于你的知识、你的社交能力和综合表现。</p><h2 id="54、-谈谈你过去做过的成功案例"><a href="#54、-谈谈你过去做过的成功案例" class="headerlink" title="54、 谈谈你过去做过的成功案例"></a>54、 谈谈你过去做过的成功案例</h2><p>回答提示：举一个你最有把握的例子，把来龙去脉说清楚，而不要说了很多却没有重点。切忌夸大其词，把别人的功劳到说成自己的，很多主管为了确保要用的人是最适合的，会打电话向你的前一个主管征询对你的看法及意见，所以如果说谎，是很容易穿梆的。</p><h2 id="55、-谈谈你过去的工作经验中，最令你挫折的事情"><a href="#55、-谈谈你过去的工作经验中，最令你挫折的事情" class="headerlink" title="55、 谈谈你过去的工作经验中，最令你挫折的事情"></a>55、 谈谈你过去的工作经验中，最令你挫折的事情</h2><p>回答提示：曾经接触过一个客户，原本就有耳闻他们以挑剔出名，所以事前的准备功夫做得十分充分，也投入了相当多的时间与精力，最后客户虽然并没有照单全收，但是接受的程度已经出乎我们意料之外了。原以为从此可以合作愉快，却得知客户最后因为预算关系选择了另一家代理商，之前的努力因而付诸流水。尽管如此，我还是从这次的经验学到很多，如对该产业的了解，整个team的默契也更好了。<br>分析：借此了解你对挫折的容忍度及调解方式。</p><h2 id="56、-如何安排自己的时间？会不会排斥加班？"><a href="#56、-如何安排自己的时间？会不会排斥加班？" class="headerlink" title="56、 如何安排自己的时间？会不会排斥加班？"></a>56、 如何安排自己的时间？会不会排斥加班？</h2><p>回答提示：基本上，如果上班工作有效率，工作量合理的话，应该不太需要加班。可是我也知道有时候很难避免加班，加上现在工作都采用责任制，所以我会调配自己的时间，全力配合。<br>分析：虽然不会有人心甘情愿的加班，但依旧要表现出高配合度的诚意。</p><h2 id="57、-为什么我们要在众多的面试者中选择你？"><a href="#57、-为什么我们要在众多的面试者中选择你？" class="headerlink" title="57、 为什么我们要在众多的面试者中选择你？"></a>57、 为什么我们要在众多的面试者中选择你？</h2><p>回答提示：根据我对贵公司的了解，以及我在这份工作上所累积的专业、经验及人脉，相信正是贵公司所找寻的人才。而我在工作态度、ＥＱ上，也有圆融、成熟的一面，和主管、同事都能合作愉快。<br>分析：别过度吹嘘自己的能力，或信口开河地乱开支票，例如一定会为该公司带来多少钱的业务等，这样很容易给人一种爱说大话、不切实际的感觉。</p><h2 id="58、-对这个职务的期许？"><a href="#58、-对这个职务的期许？" class="headerlink" title="58、 对这个职务的期许？"></a>58、 对这个职务的期许？</h2><p>回答提示：希望能借此发挥我的所学及专长，同时也吸收贵公司在这方面的经验，就公司、我个人而言，缔造“双赢”的局面。<br>分析：回答前不妨先询问该公司对这项职务的责任认定及归属，因为每一家公司的状况不尽相同。以免说了一堆理想抱负却发现牛头不对马嘴。</p><h2 id="59、-为什么选择这个职务？"><a href="#59、-为什么选择这个职务？" class="headerlink" title="59、 为什么选择这个职务？"></a>59、 为什么选择这个职务？</h2><p>回答提示：：这一直是我的兴趣和专长，经过这几年的磨练，也累积了一定的经验及人脉，相信我一定能胜任这个职务的。<br>分析：适时举出过去的“丰功伟业”，表现出你对这份职务的熟稔度，但避免过于夸张的形容或流于炫耀。</p><h2 id="60、-为什么选择我们这家公司？"><a href="#60、-为什么选择我们这家公司？" class="headerlink" title="60、 为什么选择我们这家公司？"></a>60、 为什么选择我们这家公司？</h2><p>回答提示：曾经在报章杂志看过关于贵公司的报道，与自己所追求的理念有志一同。而贵公司在业界的成绩也是有目共睹的，而且对员工的教育训练、升迁等也都很有制度。<br>分析：去面试前先做功课，了解一下该公司的背景，让对方觉得你真的很有心想得到这份工作，而不只是探探路。</p><h2 id="61、-你认为你在学校属于好学生吗？"><a href="#61、-你认为你在学校属于好学生吗？" class="headerlink" title="61、 你认为你在学校属于好学生吗？"></a>61、 你认为你在学校属于好学生吗？</h2><p>回答提示：企业的招聘者很精明，问这个问题可以试探出很多问题：如果求职者学习成绩好，就会说：“是的，我的成绩很好，所有的成绩都很优异。当然，判断一个学生是不是好学生有很多标准，在学校期间我认为成绩是重要的，其他方面包括思想道德、实践经验、团队精神、沟通能力也都是很重要的，我在这些方面也做得很好，应该说我是一个全面发展的学生。”如果求职者成绩不尽理想，便会说：“我认为是不是一个好学生的标准是多元化的，我的学习成绩还可以，在其他方面我的表现也很突出，比如我去很多地方实习过，我很喜欢在快节奏和压力下工作，我在学生会组织过 ××活动，锻炼了我的团队合作精神和组织能力。” 有经验的招聘者一听就会明白，企业喜欢诚实的求职者。</p><h2 id="62、-请谈谈如何适应办公室工作的新环境？"><a href="#62、-请谈谈如何适应办公室工作的新环境？" class="headerlink" title="62、 请谈谈如何适应办公室工作的新环境？"></a>62、 请谈谈如何适应办公室工作的新环境？</h2><p>回答提示①办公室里每个人有各自的岗位与职责，不得擅离岗位。<br>②根据领导指示和工作安排，制定工作计划，提前预备，并按计划完成。<br>③多请示并及时汇报，遇到不明白的要虚心请教。<br>④抓间隙时间，多学习，努力提高自己的政治素质和业务水平。</p><h2 id="63、-在工作中学习到了些什么？"><a href="#63、-在工作中学习到了些什么？" class="headerlink" title="63、 在工作中学习到了些什么？"></a>63、 在工作中学习到了些什么？</h2><p>回答提示：这是针对转职者提出的问题，建议此时可以配合面试工作的特点作为主要依据来回答，如业务工作需要与人沟通，便可举出之前工作与人沟通的例子，经历了哪些困难，学习到哪些经验，把握这些要点做陈述，就可以轻易过关了</p><h2 id="64、-有想过创业吗？"><a href="#64、-有想过创业吗？" class="headerlink" title="64、 有想过创业吗？"></a>64、 有想过创业吗？</h2><p>回答提示：这个问题可以显示你的冲劲，但如果你的回答是“有”的话，千万小心，下一个问题可能就是“那么为什么你不这样做呢？”</p><h2 id="65、-最能概括你自己的三个词是什么？"><a href="#65、-最能概括你自己的三个词是什么？" class="headerlink" title="65、 最能概括你自己的三个词是什么？"></a>65、 最能概括你自己的三个词是什么？</h2><p>回答提示：我经常用的三个词是：适应能力强，有责任心和做事有始终，结合具体例子向主考官解释，使他们觉得你具有发展潜力</p><h2 id="66、-你认为你在学校属于好学生吗？"><a href="#66、-你认为你在学校属于好学生吗？" class="headerlink" title="66、 你认为你在学校属于好学生吗？"></a>66、 你认为你在学校属于好学生吗？</h2><p>回答提示：企业的招聘者很精明，问这个问题可以试探出很多问题：如果求职者学习成绩好，就会说：“是的，我的成绩很好，所有的成绩都很优异。当然，判断一个学生是不是好学生有很多标准，在学校期间我认为成绩是重要的，其他方面包括思想道德、实践经验、团队精神、沟通能力也都是很重要的，我在这些方面也做得很好，应该说我是一个全面发展的学生。”如果求职者成绩不尽理想，便会说：“我认为是不是一个好学生的标准是多元化的，我的学习成绩还可以，在其他方面我的表现也很突出，比如我去很多地方实习过，我很喜欢在快节奏和压力下工作，我在学生会组织过 ××活动，锻炼了我的团队合作精神和组织能力。” 有经验的招聘者一听就会明白，企业喜欢诚实的求职者。</p><h2 id="67、-除了本公司外，还应聘了哪些公司？"><a href="#67、-除了本公司外，还应聘了哪些公司？" class="headerlink" title="67、 除了本公司外，还应聘了哪些公司？"></a>67、 除了本公司外，还应聘了哪些公司？</h2><p>回答提示：很奇怪，这是相当多公司会问的问题，其用意是要概略知道应徵者的求职志向，所以这并非绝对是负面答案，就算不便说出公司名称，也应回答“销售同种产品的公司”，如果应聘的其他公司是不同业界，容易让人产生无法信任的感觉。</p><h2 id="68、-何时可以到职？"><a href="#68、-何时可以到职？" class="headerlink" title="68、 何时可以到职？"></a>68、 何时可以到职？</h2><p>回答提示：大多数企业会关心就职时间，最好是回答\’如果被录用的话，到职日可按公司规定上班”，但如果还未辞去上一个工作、上班时间又太近，似乎有些强人所难，因为交接至少要一个月的时间，应进一步说明原因，录取公司应该会通融的</p><h2 id="69、-你并非毕业于名牌院校？"><a href="#69、-你并非毕业于名牌院校？" class="headerlink" title="69、 你并非毕业于名牌院校？"></a>69、 你并非毕业于名牌院校？</h2><p>回答提示：是否毕业于名牌院校不重要，重要的是有能力完成您交给我的工作,我有什么什么项目经验,如何帮助项目经理解决了问题,不拉不拉。</p><h2 id="70、-你怎样看待学历和能力？"><a href="#70、-你怎样看待学历和能力？" class="headerlink" title="70、 你怎样看待学历和能力？"></a>70、 你怎样看待学历和能力？</h2><p>回答提示：同样重要，一个人工作能力的高低直接决定其职场命运，而学历的高低只是进入一个企业的敲门砖</p>]]></content>
      
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础部分</title>
      <link href="/2019/01/09/Java%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86/"/>
      <url>/2019/01/09/Java%E5%9F%BA%E7%A1%80%E9%83%A8%E5%88%86/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>浅谈Spring</title>
      <link href="/2019/01/09/%E6%B5%85%E8%B0%88Spring/"/>
      <url>/2019/01/09/%E6%B5%85%E8%B0%88Spring/</url>
      
        <content type="html"><![CDATA[<h2 id="Spring-Framework"><a href="#Spring-Framework" class="headerlink" title="Spring Framework"></a>Spring Framework</h2><p>spring是一个开源应用框架，降低应用程序开发的复杂度，它是轻量级，松耦合，具有分层体系结构，允许用户选择组件，同时还为J2EE应用程序开发提供了一个有凝聚力的框架，它可以集成其他的框架，如 Structs，Hibernate，mybatis等，所以又被称为框架中的框架</p><h2 id="应用程序不同的组件"><a href="#应用程序不同的组件" class="headerlink" title="应用程序不同的组件"></a>应用程序不同的组件</h2><p>接口 - 定义功能<br>Bean类 - 包含属性setter与getter方法<br>AOP - 提供面向切面的功能<br>Bean配置文件 - 包含类的信息以及如何配置它们<br>用户程序 - 使用接口</p><h2 id="IOC容器"><a href="#IOC容器" class="headerlink" title="IOC容器"></a>IOC容器</h2><p>Spring框架的核心就是Spring容器，容器来创建对象，将它们装配在一起，配置它们并管理它们的完整生命周期。</p><p>Spring容器使用依赖注入来管理组成应用程序的组件，容器通过读取配置元数据来接收对象进行实例化，配置和组装的指令。<br>元数据可以通过XML,Java注解或是Java代码来提供</p><h2 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h2><p>在依赖注入中，不必创建对象，但是必须描述如何创建它们，不是直接在代码中将组建和服务来连接在一起，而是描述配置文件中哪些组件需要哪些服务，由IOC容器将它们装配在一起</p><h2 id="依赖注入的方式"><a href="#依赖注入的方式" class="headerlink" title="依赖注入的方式"></a>依赖注入的方式</h2><p>构造函数注入<br>setter注入<br>接口注入<br><em>在Spring Framework中仅使用构造函数和setter注入</em></p><h2 id="IOC的一些好处"><a href="#IOC的一些好处" class="headerlink" title="IOC的一些好处"></a>IOC的一些好处</h2><p>它将最小化程序中的代码量，使应用程序更易于测试，因为它不需要单元测试中的任何单例或JNDI查找机制。它以最小的影响和最少的入侵机制促进松耦合。它支持即时的实例化和延迟加载服务</p><h2 id="Spring中IOC容器"><a href="#Spring中IOC容器" class="headerlink" title="Spring中IOC容器"></a>Spring中IOC容器</h2><p>BeanFactory - BeanFactory 就像一个包含 bean 集合的工厂类。它会在客户端要求时实例化 bean。</p><p>ApplicationContext - ApplicationContext 接口扩展了 BeanFactory 接口。它在 BeanFactory 基础上提供了一些额外的功能。</p><h2 id="Spring-Framework功能列举"><a href="#Spring-Framework功能列举" class="headerlink" title="Spring Framework功能列举"></a>Spring Framework功能列举</h2><p>轻量级 - Spring 在代码量和透明度方面都很轻便。<br>IOC - 控制反转AOP - 面向切面编程可以将应用业务逻辑和系统服务分离，以实现高内聚。<br>容器 - Spring 负责创建和管理对象（Bean）的生命周期和配置。<br>MVC - 对 web 应用提供了高度可配置性，其他框架的集成也十分方便。事务管理 - 提供了用于事务管理的通用抽象层。<br>Spring 的事务支持也可用于容器较少的环境。<br>JDBC 异常 - Spring 的 JDBC 抽象层提供了一个异常层次结构，简化了错误处理策略。</p><h2 id="一些注解"><a href="#一些注解" class="headerlink" title="一些注解"></a>一些注解</h2><p>@Component：这将 java 类标记为 bean。它是任何 Spring 管理组件的通用构造型。spring 的组件扫描机制现在可以将其拾取并将其拉入应用程序环境中。</p><p>@Controller：这将一个类标记为 Spring Web MVC 控制器。标有它的 Bean 会自动导入到 IoC 容器中。</p><p>@Service：此注解是组件注解的特化。它不会对 @Component 注解提供任何其他行为。您可以在服务层类中使用 @Service 而不是 @Component，因为它以更好的方式指定了意图。</p><p>@Repository：这个注解是具有类似用途和功能的 @Component 注解的特化。它为 DAO 提供了额外的好处。它将 DAO 导入 IoC 容器，并使未经检查的异常有资格转换为 Spring DataAccessException。</p><p>@RequestMapping 注解用于将特定 HTTP 请求方法映射到将处理相应请求的控制器中的特定类/方法。此注释可应用于两个级别：类级别：映射请求的 URL方法级别：映射 URL 以及 HTTP 请求方法</p><p>@Autowired 可以更准确地控制应该在何处以及如何进行自动装配。此注解用于在 setter 方法，构造函数，具有任意名称或多个参数的属性或方法上自动装配 bean。默认情况下，它是类型驱动的注入。</p><p>@Qualifier 当您创建多个相同类型的 bean 并希望仅使用属性装配其中一个 bean 时，您可以使用@Qualifier 注解和 @Autowired 通过指定应该装配哪个确切的 bean 来消除歧义。</p>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>人生的意义</title>
      <link href="/2019/01/08/%E4%BA%BA%E7%94%9F%E7%9A%84%E6%84%8F%E4%B9%89/"/>
      <url>/2019/01/08/%E4%BA%BA%E7%94%9F%E7%9A%84%E6%84%8F%E4%B9%89/</url>
      
        <content type="html"><![CDATA[<h2 id="我们的人生受控于随机性"><a href="#我们的人生受控于随机性" class="headerlink" title="我们的人生受控于随机性"></a>我们的人生受控于随机性</h2><p>婴孩降临于世，将面对何种家庭，毫无知情权，或许此家庭之理念他未必青睐，依然只得逆来顺受。或许他立马就成为豪奢望族的公子，命途由此德高望重。犹如日向宁次说过的一句 “人的命运从一出生就被决定了”</p><p><hr></p><h2 id="疾病之繁杂与灾祸之频发"><a href="#疾病之繁杂与灾祸之频发" class="headerlink" title="疾病之繁杂与灾祸之频发"></a>疾病之繁杂与灾祸之频发</h2><p>人类作为智慧生灵，却会轻易被疾病纠缠。此外，可怕的自然灾害，包括车祸、空难、垮桥等人为事故，无不刺激着凡人心神。</p><p><hr></p><h2 id="极端情形下被迫放弃生命"><a href="#极端情形下被迫放弃生命" class="headerlink" title="极端情形下被迫放弃生命"></a>极端情形下被迫放弃生命</h2><p>此举非同于自杀，自杀至少是一瞬间的自愿行为，未被压抑；而被迫放弃生命，如路人拯救溺水顽童遇难、高危行业人员殉职等。他们品性高洁，理应善始善终，却惨遭不幸。</p><p><hr><br>不论将来做什么，或伟大，或平凡，所有人都将面临死亡，每个人都会被时间所遗忘，消失在宇宙中。<br>人的一生重复地上学放学或是上班下班，一切都这样无聊。<br>从小就被说要做对社会有贡献的人，或是名人，牛人，有钱人，争权夺势，或是苦心研究，可是这些到最后又有什么意义呢？反正人都得死。什么也带不走。<br>有人说，人死了，可他的贡献还在，会被后人永远铭记，也可以帮助国家和人类历史的发展，可是国家又是什么呢？<br>就算做出了改变国家或者人类历史的事情，可是地球也终将会走到毁灭的那一天，到时候人类和国家也都消失了，所有的一切都不复存在了。<br>为什么还要活着呢？或者是为什么还要努力、拼命地活着呢？不论是好的还是坏的都将消失，又为什么要做别人眼中所谓好的呢？</p>]]></content>
      
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国队长燕双鹰</title>
      <link href="/2019/01/07/%E4%B8%AD%E5%9B%BD%E9%98%9F%E9%95%BF%E7%87%95%E5%8F%8C%E9%B9%B0/"/>
      <url>/2019/01/07/%E4%B8%AD%E5%9B%BD%E9%98%9F%E9%95%BF%E7%87%95%E5%8F%8C%E9%B9%B0/</url>
      
        <content type="html"><![CDATA[<p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1546915589007&amp;di=fd3075f53c9451b4e555af8bc038a275&amp;imgtype=0&amp;src=http%3A%2F%2Fi1.hdslb.com%2Fbfs%2Farchive%2F360bb3fe6eea0128bf0f572054afc8d27d6444ef.png" alt=""></p><h2 id="角色-燕双鹰（英雄）-LV·99"><a href="#角色-燕双鹰（英雄）-LV·99" class="headerlink" title="角色:燕双鹰（英雄）  LV·99"></a>角色:燕双鹰（英雄）  LV·99</h2><h2 id="技能"><a href="#技能" class="headerlink" title="技能"></a>技能</h2><h3 id="技能1-等离子护盾-射向自己的子弹都会被弹开，护盾值500"><a href="#技能1-等离子护盾-射向自己的子弹都会被弹开，护盾值500" class="headerlink" title="技能1: 等离子护盾: 射向自己的子弹都会被弹开，护盾值500"></a>技能1: 等离子护盾: 射向自己的子弹都会被弹开，护盾值500</h3><h3 id="技能2-要害规避-护盾值耗尽后，自身要害部位进入无敌状态"><a href="#技能2-要害规避-护盾值耗尽后，自身要害部位进入无敌状态" class="headerlink" title="技能2: 要害规避: 护盾值耗尽后，自身要害部位进入无敌状态"></a>技能2: 要害规避: 护盾值耗尽后，自身要害部位进入无敌状态</h3><h3 id="技能3-超级补给-燕双鹰的弹药补给数X2"><a href="#技能3-超级补给-燕双鹰的弹药补给数X2" class="headerlink" title="技能3: 超级补给: 燕双鹰的弹药补给数X2"></a>技能3: 超级补给: 燕双鹰的弹药补给数X2</h3><h3 id="技能4-灵能干扰-降低所有敌人命中率95％"><a href="#技能4-灵能干扰-降低所有敌人命中率95％" class="headerlink" title="技能4: 灵能干扰: 降低所有敌人命中率95％"></a>技能4: 灵能干扰: 降低所有敌人命中率95％</h3><h3 id="技能5-撩妹光环-身边能帮上忙的女性有极大几率会爱上燕双鹰"><a href="#技能5-撩妹光环-身边能帮上忙的女性有极大几率会爱上燕双鹰" class="headerlink" title="技能5: 撩妹光环: 身边能帮上忙的女性有极大几率会爱上燕双鹰"></a>技能5: 撩妹光环: 身边能帮上忙的女性有极大几率会爱上燕双鹰</h3><h3 id="技能6-刺客信条-飞檐走壁或者潜入都不会被发现"><a href="#技能6-刺客信条-飞檐走壁或者潜入都不会被发现" class="headerlink" title="技能6: 刺客信条: 飞檐走壁或者潜入都不会被发现"></a>技能6: 刺客信条: 飞檐走壁或者潜入都不会被发现</h3><h3 id="技能7-超级体质-燕双鹰脱离战斗后每分钟回复1％的生命值"><a href="#技能7-超级体质-燕双鹰脱离战斗后每分钟回复1％的生命值" class="headerlink" title="技能7: 超级体质: 燕双鹰脱离战斗后每分钟回复1％的生命值"></a>技能7: 超级体质: 燕双鹰脱离战斗后每分钟回复1％的生命值</h3><h3 id="技能8-掩体强化-被燕双鹰作为掩体的物品能短时间内无视物理攻击"><a href="#技能8-掩体强化-被燕双鹰作为掩体的物品能短时间内无视物理攻击" class="headerlink" title="技能8: 掩体强化: 被燕双鹰作为掩体的物品能短时间内无视物理攻击"></a>技能8: 掩体强化: 被燕双鹰作为掩体的物品能短时间内无视物理攻击</h3><h3 id="技能9-超时空武器协议-燕双鹰可以获得未来武器，比如米尼岗机枪，全地形越野车"><a href="#技能9-超时空武器协议-燕双鹰可以获得未来武器，比如米尼岗机枪，全地形越野车" class="headerlink" title="技能9: 超时空武器协议: 燕双鹰可以获得未来武器，比如米尼岗机枪，全地形越野车"></a>技能9: 超时空武器协议: 燕双鹰可以获得未来武器，比如米尼岗机枪，全地形越野车</h3><h3 id="技能10-载具召唤-能随时随地的召唤自己想要的载具，有一定几率能召唤出飞机坦克"><a href="#技能10-载具召唤-能随时随地的召唤自己想要的载具，有一定几率能召唤出飞机坦克" class="headerlink" title="技能10: 载具召唤: 能随时随地的召唤自己想要的载具，有一定几率能召唤出飞机坦克"></a>技能10: 载具召唤: 能随时随地的召唤自己想要的载具，有一定几率能召唤出飞机坦克</h3><h3 id="技能11-灵能操控-燕双鹰能随意操控物体，甚至载具"><a href="#技能11-灵能操控-燕双鹰能随意操控物体，甚至载具" class="headerlink" title="技能11: 灵能操控: 燕双鹰能随意操控物体，甚至载具"></a>技能11: 灵能操控: 燕双鹰能随意操控物体，甚至载具</h3><h3 id="技能12-枪神射术-燕双鹰在任意地形，任意姿势，任意状态下都能准确的命中敌人，无需瞄准"><a href="#技能12-枪神射术-燕双鹰在任意地形，任意姿势，任意状态下都能准确的命中敌人，无需瞄准" class="headerlink" title="技能12: 枪神射术: 燕双鹰在任意地形，任意姿势，任意状态下都能准确的命中敌人，无需瞄准"></a>技能12: 枪神射术: 燕双鹰在任意地形，任意姿势，任意状态下都能准确的命中敌人，无需瞄准</h3><h3 id="技能13-弱智术-持有武器并对燕双鹰构成威胁的敌人，其智商会强制降低1000点"><a href="#技能13-弱智术-持有武器并对燕双鹰构成威胁的敌人，其智商会强制降低1000点" class="headerlink" title="技能13: 弱智术: 持有武器并对燕双鹰构成威胁的敌人，其智商会强制降低1000点"></a>技能13: 弱智术: 持有武器并对燕双鹰构成威胁的敌人，其智商会强制降低1000点</h3><h3 id="技能14-杀鸡儆猴-每击杀一名敌人都会对剩余敌人造成几大震慑，剩余敌人会进入恐惧，眩晕，颤栗，吓尿等负面状态"><a href="#技能14-杀鸡儆猴-每击杀一名敌人都会对剩余敌人造成几大震慑，剩余敌人会进入恐惧，眩晕，颤栗，吓尿等负面状态" class="headerlink" title="技能14: 杀鸡儆猴: 每击杀一名敌人都会对剩余敌人造成几大震慑，剩余敌人会进入恐惧，眩晕，颤栗，吓尿等负面状态"></a>技能14: 杀鸡儆猴: 每击杀一名敌人都会对剩余敌人造成几大震慑，剩余敌人会进入恐惧，眩晕，颤栗，吓尿等负面状态</h3>]]></content>
      
      
      <categories>
          
          <category> 有趣的人 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>妄想感傷代償連盟</title>
      <link href="/2019/01/07/%E5%A6%84%E6%83%B3%E6%84%9F%E5%82%B7%E4%BB%A3%E5%84%9F%E9%80%A3%E7%9B%9F/"/>
      <url>/2019/01/07/%E5%A6%84%E6%83%B3%E6%84%9F%E5%82%B7%E4%BB%A3%E5%84%9F%E9%80%A3%E7%9B%9F/</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.moegirl.org/common/thumb/9/9b/Hatsune_miku_v4x.png/800px-Hatsune_miku_v4x.png" alt=""></p><h2 id="音源"><a href="#音源" class="headerlink" title="音源"></a>音源</h2><p>初音未来的音源样本由声优藤田咲提供。这一选择是在考虑过近五百份声音样本后作出的，因为藤田咲的声音“清楚而可爱”（分かりやすくかわいらしかった）[5]。在录音时，藤田咲以“可爱的偶像声线”进行录音，共花费两天时间，每天三小时，录音内容是无意义的罗马音组合[6]。音源制作的演示乐曲让藤田咲十分惊喜，认为十分可爱[6]。实际上，音源合成输出的声音，与藤田咲本人的声音并不相似。</p><h2 id="Everyone-Creator"><a href="#Everyone-Creator" class="headerlink" title="Everyone, Creator"></a>Everyone, Creator</h2><p>每个人都是创作者对音乐充满热情的业余作曲者，将自己的旋律倾注在她身上，通过她寻找知音。对绘画充满热情的业余编舞者，将自己的设计倾注在她身上，通过她创作形象。对舞蹈充满热情的业余编舞者，将自己的编排倾注在她身上，通过她演绎创意。喜欢跳舞唱歌的业余舞见唱见，将自己的才能倾注在她身上，通过她表达自我。而如我这样没有才能但愿意被他们感染的人，创造了初音未来的受众。商业上，初音未来作为一个平台，既挖掘了生产者也创造了消费者，她是成功的。艺术上，初音未来作为一个平台，既挖掘了创作者也发现了欣赏者，她是成功的。在自由授权的许可下，音乐和绘画的门槛降到了低点，才能不再因为无财力而埋没，受众不再因为无推广而无法形成市场。最终每一个人都参与了创作，每一个人都是创作者，因此每一个人都通过初音未来这个平台将自己最为美好的梦与想象赋予了这个虚拟歌手工具。于是每一个作者的才华，凝结成了初音未来的才华，她能飙高能飚速能婉约能悲切，她能跳出美妙的舞蹈，她有着百变的造型，最终又进一步受到不同人的认同，不断地累积，形成了现在的样子。所以一言以蔽之，Everyone, Creator</p><h2 id="歌词"><a href="#歌词" class="headerlink" title="歌词"></a>歌词</h2><p>言っちゃった<br>もう一時だけ隣りに居たい<br>いやいやまさか　延長は鬱雑い<br>御免なさい　帰ってね<br>二酸化の炭素　きみの濃度</p><p>浸ってたいよ　泥沼の夢に<br>身勝手だって言われてもペロリ<br>不安じゃない　未来はない<br>その顔に生まれ変わりたいな</p><p>知っちゃった<br>大嫌いを裏返したとて<br>そこに大好きは隠れてないと<br>叶えたい　この想い<br>甘え過ぎ太る心回り</p><p>“ファット想い→スリム”を掲げよう<br>出逢った頃と同じ様に成ろう<br>思い笑描く理想狂<br>血走る願いはやがて安堵</p><p>だけど「大丈夫」なんて恋はどこにもないの</p><p>だから妄想感傷代償連盟<br>愛を懐いて理想を号んだ<br>行き場のない愚者のメロディー<br>再挑戦・転生・テレポーテーション<br>何回だって　重ねて逝くんだ<br>終わりなき愛の隨に　さあ</p><p>愛や厭 愛や厭 なななな<br>愛や厭 愛や厭 ななななな<br>愛や厭 愛や厭 なななな<br>愛や厭 愛や厭 ななななな</p>]]></content>
      
      
      <categories>
          
          <category> 有趣的人 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>无聊的一天</title>
      <link href="/2019/01/06/%E6%97%A0%E8%81%8A%E7%9A%84%E4%B8%80%E5%A4%A9/"/>
      <url>/2019/01/06/%E6%97%A0%E8%81%8A%E7%9A%84%E4%B8%80%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<p><img src="https://gss2.bdstatic.com/9fo3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike116%2C5%2C5%2C116%2C38/sign=d7268799d139b60059c307e588395e4f/77094b36acaf2edd6124cd93891001e9380193f7.jpg" alt="真白"></p><h2 id="今天也是无聊的一天"><a href="#今天也是无聊的一天" class="headerlink" title="今天也是无聊的一天"></a>今天也是无聊的一天</h2><p>每个人都有繁忙的时候，同样都有无聊的时候。在你们无聊的时候，都会做到什么，逛街，喝酒，K歌，还是看电视剧，或者是无聊的发呆</p><h2 id="为什么会无聊"><a href="#为什么会无聊" class="headerlink" title="为什么会无聊"></a>为什么会无聊</h2><p>我有时候就在想，为什么会无聊，忙的时候，开心的时候，指定不会无聊。首先，在你无聊的时候，一定要找点事情做，看书，看电影都行，实在不行听歌也是个好办法。尽你的一切办法来换位无聊，再不行跑步，互相出手或者打电话出去玩耍去，来跟无聊说拜拜。</p><h2 id="😀"><a href="#😀" class="headerlink" title="😀"></a>😀</h2><p>都说人在孤独的时候，是很无聊的，可以说什么无聊的事情都做的出来，用来消磨时间。事后回想起来，都会忍不住想笑</p><p>##<br>刘能是一个保安，三十多岁的人，也没找到老婆，每天靠着干保安的工作维持生活，每个月交了房租，可以说基本剩不下什么钱。保安这个工作，也非常的轻松，就是在保卫室里呆着，玩玩手机，没事再巡逻一圈，一天的任务基本就完成了，然后就可以交接给轮班的下一位了。然而白天可能还没有这么无聊，到了晚上，基本上开始进入最无聊的时刻，刘能单身，自己租房子住，到了晚上，找个人说话都非常困难，经常只能自言自语。</p><p>这天，刘能在下午六点交接完，吃完晚饭就回到出租屋里了，出租屋窄小昏暗，除了一张床一个衣柜好像就容不下其他的家具。像往常一样，刘能象征性的玩了一下手机，开了一下通讯软件，可是根本就没有什么信息，想联系一下旧时的朋友，却又不忍打扰别人平静的生活，刘能浏览了一下新闻，就躺下床睡觉。</p><p>刘能强行闭上眼睛，希望用睡觉来消磨时间，可是他再怎么努力去睡，也始终难以进入梦乡，在床上痛苦挣扎了两个小时，仍然毫无倦意，无法进入睡眠，刘能望着天花板，一股强烈的孤独感从四面八方蔓延而来，侵袭着刘能的全身。</p><p>“看来是睡不着了。”刘能心想，于是直起身子，起床到出租屋旁边的超市。没错，就是捏方便面。刘能去到了熟悉的方便面区，开始捏起来。今天，他选择了红色经典款，隔着包装袋，刘能从头开始，一点一点的捏碎方便面，方便面面饼因为受力的原因，发出了“嘎吱嘎吱”的清脆的响声。刘能还不够过瘾，他又继续朝底下捏去，袋装方便面被他从方块的形状捏成了椭圆状，刘能一点一点的粉碎方便面，那种清脆的爆破声让他感到心满意足。随着反复的揉搓挤压，红色经典款已经被他蹂躏的不像一包方便面，完全没有了当初的骨气和棱角。刘能看着眼前的包装袋，早已变形不堪，里面的面饼现在已经成了粉末状，刘能这才长舒一口气，仿佛像玩腻了一样，把他扔在了不起眼的角落，可当他才刚刚放下，他的目光又被一款黄色经典款包装袋所吸引，看，那款黄色包装袋，静静的躺在那里，像一只乖巧的宠物，忍不住让人去爱抚。刘能又忍不住对它伸出了魔爪，邪恶的指尖触及包装袋温柔的皮肤……<br>刘能才碰到塑料袋，突然，肩膀被人一拍，一只大手搭在刘能肩上，刘能回头一看，两个彪形大汉围在了他的身后。</p><p>“又是你，我们在摄像头看见过你很多次了。”那个大汉说道。</p><p>“没想到你还是死性不改，我没见过什么人像你这么无聊。”说着，那两个大汉把刘能抬了起来，扔在超市门口外面。</p><p>刘能气的愤愤不平，又无话可说，灰溜溜的跑回出租屋去了。</p><p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1546754857509&amp;di=bd6983f62b55bc7d22caea1b7204d43b&amp;imgtype=0&amp;src=http%3A%2F%2Fimg5.duitang.com%2Fuploads%2Fblog%2F201507%2F26%2F20150726202301_K2fLP.thumb.700_0.gif" alt=""></p>]]></content>
      
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利威尔阿克曼</title>
      <link href="/2019/01/05/%E5%88%A9%E5%A8%81%E5%B0%94%E9%98%BF%E5%85%8B%E6%9B%BC/"/>
      <url>/2019/01/05/%E5%88%A9%E5%A8%81%E5%B0%94%E9%98%BF%E5%85%8B%E6%9B%BC/</url>
      
        <content type="html"><![CDATA[<p><img src="https://gss2.bdstatic.com/9fo3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike80%2C5%2C5%2C80%2C26/sign=46e265e710d8bc3ed2050e98e3e2cd7b/86d6277f9e2f0708025bfadde024b899a801f295.jpg" alt="利威尔阿克曼"></p><h2 id="人类最强的士兵"><a href="#人类最强的士兵" class="headerlink" title="人类最强的士兵"></a>人类最强的士兵</h2><p>调查兵团的士兵长、调查兵团特别作战班利威尔班班长，通称“利威尔兵长”或“利威尔士兵长</p><h2 id="阿克曼家族后裔"><a href="#阿克曼家族后裔" class="headerlink" title="阿克曼家族后裔"></a>阿克曼家族后裔</h2><p>母亲为库谢尔·阿克曼，在阿克曼家族没落后，被迫成为一名妓女，父亲不详，舅舅为中央宪兵队长凯尼∙阿克曼。</p><p><hr><br>身材矮小，却拥有“人类最强的士兵”之称号。带领精英班利威尔班战斗，后因保护艾伦与女巨人战斗，利威尔班除利威尔自己、艾伦外全灭</p><h2 id="生命的终结"><a href="#生命的终结" class="headerlink" title="生命的终结"></a>生命的终结</h2><p>不知为什么心疼了一下利威尔 也许是因为他的强大让所有人忽视了其实他比主角更加悲剧性 眼睁睁看着自己的母亲在贫困和病痛的折磨中离世 看着凯尼转身离去的背影 看着法兰和伊莎因为自己错误的选择惨死在巨人手上 看着自己的部下横尸巨木之森 看着佩特拉的尸体被推下马车 看着凯尼生命的终结</p><h2 id="人，在开始放弃战斗的时候才算输，坚持战斗的话，就还没输"><a href="#人，在开始放弃战斗的时候才算输，坚持战斗的话，就还没输" class="headerlink" title="人，在开始放弃战斗的时候才算输，坚持战斗的话，就还没输"></a>人，在开始放弃战斗的时候才算输，坚持战斗的话，就还没输</h2>]]></content>
      
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宇智波鼬</title>
      <link href="/2019/01/05/hello-world/"/>
      <url>/2019/01/05/hello-world/</url>
      
        <content type="html"><![CDATA[<p><img src="http://img.mp.itc.cn/upload/20170323/fef122a7b51149de998b84cb68647587_th.jpeg" alt="宇智波鼬"></p><h2 id="宇智波鼬"><a href="#宇智波鼬" class="headerlink" title="宇智波鼬"></a>宇智波鼬</h2><p><strong>只要是人都是依靠自己的知识与认知并且被之束缚生活着的，那就叫做现实。但是知识与认知是模糊不清的东西，现实也许只是镜中花水中月，人都是活在自己的执念中的。</strong></p><hr><p>我们所看到的事情，所学到的东西，在我们的大脑里形成一个知识库，当我们遇见什么事的时候，就会搜索知识库，知识库会给我们答案，但是这个答案只是我们之前所学的事情带给我们的解释，我们通常都会相信自己的知识库，这部分是我们的价值观。但是我们所看到的事情，所学到的事情别人或许比我们看到的不一样或者是更多，于是他们形成了和我们不一样的知识库，所以他们就会在遇上事情的时候和我们出现不一样的理解，但是他们认为自己这样的理解是对的，于是人们就有了分歧，争执。但是我们所有人所看到的也不一定就是事实，我们每一个人的理解也不一定就是事情的真相，这些我们无法理解和还没认清的事物，我们无法挣脱，于是就将它称之为现实。但是我们所理解的和未理解的，都不一定就是真理，这个世界你不能说他存在就存在，也不一定说他未存在就真的没有存在，我们之所以相信所谓的存在，只是内心想要他存在他便存在而已。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
